<?php
require_once '../templates/header.php';
require_once '../templates/sidebar.php';
?>

<div class="container-fluid">
    <div class="content">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Qu·∫£n l√Ω danh m·ª•c</h2>
            <button class="btn btn-primary" onclick="openCategoryModal()">
                ‚ûï Th√™m danh m·ª•c m·ªõi
            </button>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th class="text-center" width="5%">ID</th>
                        <th width="20%">T√™n danh m·ª•c</th>
                        <th width="15%">Slug</th>
                        <th width="10%">S·ªë s·∫£n ph·∫©m</th>
                        <th width="10%">H√¨nh ·∫£nh</th>
                        <th>M√¥ t·∫£</th>
                        <th class="text-center" width="15%">Thao t√°c</th>
                    </tr>
                </thead>
                <tbody id="categoriesTableBody">
                    <!-- D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c th√™m v√†o ƒë√¢y b·∫±ng JavaScript -->
                </tbody>
            </table>
        </div>

        <!-- Modal Th√™m/S·ª≠a Danh m·ª•c -->
        <div class="modal fade" id="categoryModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title">Th√™m / S·ª≠a Danh m·ª•c</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="categoryForm" enctype="multipart/form-data">
                            <input type="hidden" id="categoryId">
                            <div class="mb-3">
                                <label class="form-label">T√™n danh m·ª•c</label>
                                <input type="text" class="form-control" id="categoryName" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Slug</label>
                                <input type="text" class="form-control" id="categorySlug" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">H√¨nh ·∫£nh</label>
                                <input type="file" class="form-control" id="categoryImage" accept="image/*">
                                <div id="currentImage" class="mt-2"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">M√¥ t·∫£</label>
                                <textarea class="form-control" id="categoryDescription" rows="3"></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                        <button type="button" class="btn btn-primary" onclick="saveCategory()">L∆∞u</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Bi·∫øn ƒë·ªÉ l∆∞u tr·ªØ danh s√°ch danh m·ª•c
let categories = [];

// H√†m t·∫°o slug t·ª´ t√™n
function createSlug(str) {
    str = str.toLowerCase();
    str = str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
    str = str.replace(/[ƒëƒê]/g, 'd');
    str = str.replace(/([^0-9a-z-\s])/g, '');
    str = str.replace(/(\s+)/g, '-');
    str = str.replace(/-+/g, '-');
    str = str.replace(/^-+|-+$/g, '');
    return str;
}

// T·ª± ƒë·ªông t·∫°o slug khi nh·∫≠p t√™n
document.getElementById('categoryName').addEventListener('input', function() {
    document.getElementById('categorySlug').value = createSlug(this.value);
});

// H√†m t·∫£i danh s√°ch danh m·ª•c
async function loadCategories() {
    try {
        const response = await fetch('/lotso/api/categories');
        const result = await response.json();
        if (result.success) {
            categories = result.data;
            displayCategories();
        } else {
            alert('L·ªói: ' + result.message);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra khi t·∫£i danh s√°ch danh m·ª•c');
    }
}

// H√†m hi·ªÉn th·ªã danh s√°ch danh m·ª•c
function displayCategories() {
    const tbody = document.getElementById('categoriesTableBody');
    tbody.innerHTML = categories.map(category => `
        <tr>
            <td class="text-center">${category.id}</td>
            <td>${category.name}</td>
            <td>${category.slug}</td>
            <td class="text-center">${category.product_count || 0}</td>
            <td>
                ${category.image ? `<img src="/lotso/uploads/${category.image}" width="80" alt="${category.name}">` : 'Kh√¥ng c√≥ ·∫£nh'}
            </td>
            <td>${category.description || ''}</td>
            <td class="text-center">
                <button class="btn btn-success btn-sm" onclick="showCategory(${category.id})">
                    üëÅÔ∏è Xem
                </button>
                <button class="btn btn-warning btn-sm" onclick="openCategoryModal(${category.id})">
                    ‚úèÔ∏è S·ª≠a
                </button>
                <button class="btn btn-danger btn-sm" onclick="deleteCategory(${category.id})">
                    üóëÔ∏è X√≥a
                </button>
            </td>
        </tr>
    `).join('');
}

// H√†m m·ªü modal th√™m/s·ª≠a danh m·ª•c
async function openCategoryModal(id = null) {
    const modal = new bootstrap.Modal(document.getElementById('categoryModal'));
    const form = document.getElementById('categoryForm');
    form.reset();
    document.getElementById('categoryId').value = '';
    document.getElementById('currentImage').innerHTML = '';

    if (id) {
        try {
            const response = await fetch(`/lotso/api/categories/${id}`);
            const result = await response.json();
            if (result.success) {
                const category = result.data;
                document.getElementById('categoryId').value = category.id;
                document.getElementById('categoryName').value = category.name;
                document.getElementById('categorySlug').value = category.slug;
                document.getElementById('categoryDescription').value = category.description || '';
                if (category.image) {
                    document.getElementById('currentImage').innerHTML = 
                        `<img src="/lotso/uploads/${category.image}" width="100" class="mt-2">`;
                }
            }
        } catch (error) {
            console.error('Error:', error);
            alert('C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin danh m·ª•c');
            return;
        }
    }

    modal.show();
}

// H√†m l∆∞u danh m·ª•c
async function saveCategory() {
    const id = document.getElementById('categoryId').value;
    const formData = new FormData();
    formData.append('name', document.getElementById('categoryName').value);
    formData.append('slug', document.getElementById('categorySlug').value);
    formData.append('description', document.getElementById('categoryDescription').value);

    const imageFile = document.getElementById('categoryImage').files[0];
    if (imageFile) {
        formData.append('image', imageFile);
    }

    try {
        const response = await fetch(`/lotso/api/categories${id ? '/' + id : ''}`, {
            method: id ? 'PUT' : 'POST',
            body: formData
        });

        const result = await response.json();
        if (result.success) {
            bootstrap.Modal.getInstance(document.getElementById('categoryModal')).hide();
            loadCategories();
            alert(id ? 'C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng!' : 'Th√™m danh m·ª•c th√†nh c√¥ng!');
        } else {
            alert('L·ªói: ' + result.message);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra khi l∆∞u danh m·ª•c');
    }
}

// H√†m x√≥a danh m·ª•c
async function deleteCategory(id) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a danh m·ª•c n√†y? T·∫•t c·∫£ s·∫£n ph·∫©m trong danh m·ª•c c≈©ng s·∫Ω b·ªã x√≥a!')) {
        return;
    }

    try {
        const response = await fetch(`/lotso/api/categories/${id}`, {
            method: 'DELETE'
        });

        const result = await response.json();
        if (result.success) {
            loadCategories();
            alert('X√≥a danh m·ª•c th√†nh c√¥ng!');
        } else {
            alert('L·ªói: ' + result.message);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra khi x√≥a danh m·ª•c');
    }
}

// H√†m xem chi ti·∫øt danh m·ª•c
async function showCategory(id) {
    try {
        const response = await fetch(`/lotso/api/categories/${id}`);
        const result = await response.json();
        if (result.success) {
            const category = result.data;
            const modal = new bootstrap.Modal(document.getElementById('categoryModal'));
            document.getElementById('categoryId').value = category.id;
            document.getElementById('categoryName').value = category.name;
            document.getElementById('categorySlug').value = category.slug;
            document.getElementById('categoryDescription').value = category.description || '';
            if (category.image) {
                document.getElementById('currentImage').innerHTML = 
                    `<img src="/lotso/uploads/${category.image}" width="100" class="mt-2">`;
            }
            
            // Disable all inputs for view mode
            const inputs = document.querySelectorAll('#categoryForm input, #categoryForm textarea');
            inputs.forEach(input => input.disabled = true);
            
            // Hide save button
            document.querySelector('#categoryModal .modal-footer .btn-primary').style.display = 'none';
            
            modal.show();
        }
    } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin danh m·ª•c');
    }
}

// T·∫£i d·ªØ li·ªáu khi trang ƒë∆∞·ª£c load
document.addEventListener('DOMContentLoaded', () => {
    loadCategories();
});
</script>

<?php require_once '../templates/footer.php'; ?>
