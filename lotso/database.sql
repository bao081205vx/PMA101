-- T·∫°o database (ch·ªâ khi ch∆∞a c√≥)
CREATE DATABASE IF NOT EXISTS lotso;
USE lotso;

-- X√≥a b·∫£ng c≈© n·∫øu t·ªìn t·∫°i
DROP TABLE IF EXISTS order_items, orders, products, users, discounts, posts, categories, comments, settings;

-- üîπ B·∫£ng DANH M·ª§C S·∫¢N PH·∫®M
CREATE TABLE IF NOT EXISTS categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL,
    description TEXT,
    image VARCHAR(255),
    status TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- üîπ B·∫£ng S·∫¢N PH·∫®M
CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    category_id INT,
    image VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL
);

-- üîπ B·∫£ng NG∆Ø·ªúI D√ôNG
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'customer') DEFAULT 'customer',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üîπ B·∫£ng ƒê∆†N H√ÄNG
CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    total_price DECIMAL(10,2) NOT NULL,
    status ENUM('pending', 'processing', 'completed', 'canceled') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- üîπ B·∫£ng CHI TI·∫æT ƒê∆†N H√ÄNG
CREATE TABLE IF NOT EXISTS order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

-- üîπ B·∫£ng M√É GI·∫¢M GI√Å
CREATE TABLE IF NOT EXISTS discounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    type ENUM('percentage', 'fixed') NOT NULL,
    value DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    used INT NOT NULL DEFAULT 0,
    minimum_order DECIMAL(10,2) NOT NULL DEFAULT 0,
    description TEXT,
    start_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üîπ B·∫£ng B√ÄI VI·∫æT (BLOG)
CREATE TABLE IF NOT EXISTS posts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL,
    content TEXT NOT NULL,
    excerpt TEXT,
    category_id INT,
    author_id INT NOT NULL,
    image VARCHAR(255),
    views INT NOT NULL DEFAULT 0,
    status ENUM('draft', 'published') DEFAULT 'draft',
    meta_title VARCHAR(255),
    meta_description TEXT,
    meta_keywords VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL,
    FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
);

-- üîπ B·∫£ng B√åNH LU·∫¨N
CREATE TABLE IF NOT EXISTS comments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    post_id INT NOT NULL,
    user_id INT NOT NULL,
    user_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    content TEXT NOT NULL,
    status ENUM('pending', 'approved', 'spam') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- üîπ B·∫£ng C√ÄI ƒê·∫∂T
CREATE TABLE IF NOT EXISTS `settings` (
  `key` varchar(50) NOT NULL,
  `value` text,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- üåü TH√äM D·ªÆ LI·ªÜU M·∫™U

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng users
INSERT INTO users (username, email, password, role) VALUES
('admin', 'admin@example.com', SHA2('admin123', 256), 'admin'),
('john_doe', 'john@example.com', SHA2('password123', 256), 'customer'),
('jane_smith', 'jane@example.com', SHA2('mypassword', 256), 'customer');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng categories
INSERT INTO categories (name, slug, description, image) VALUES
('Gi√†y th·ªÉ thao', 'giay-the-thao', 'Chuy√™n c√°c lo·∫°i gi√†y th·ªÉ thao', 'sport.jpg'),
('Gi√†y c√¥ng s·ªü', 'giay-cong-so', 'Chuy√™n c√°c lo·∫°i gi√†y c√¥ng s·ªü', 'office.jpg'),
('Gi√†y sneakers', 'giay-sneakers', 'C√°c m·∫´u sneakers hot nh·∫•t', 'sneakers.jpg');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng products
INSERT INTO products (name, description, price, quantity, category_id, image) VALUES
('Nike Air Max', 'Gi√†y th·ªÉ thao Nike Air Max nh·∫π, √™m √°i', 150.00, 50, 1, 'nike_air_max.jpg'),
('Adidas Ultraboost', 'Gi√†y th·ªÉ thao Adidas Ultraboost hi·ªáu su·∫•t cao', 180.00, 30, 1, 'adidas_ultraboost.jpg'),
('Gi√†y T√¢y Da Cao C·∫•p', 'Gi√†y t√¢y l·ªãch l√£m d√†nh cho c√¥ng s·ªü', 200.00, 20, 2, 'giay_tay.jpg'),
('Vans Old Skool', 'Sneaker phong c√°ch c·ªï ƒëi·ªÉn c·ªßa Vans', 90.00, 40, 3, 'vans_old_skool.jpg'),
('Converse Chuck Taylor', 'Sneaker huy·ªÅn tho·∫°i Converse Chuck Taylor', 85.00, 25, 3, 'converse_chuck.jpg');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng orders
INSERT INTO orders (user_id, total_price, status) VALUES
(2, 150.00, 'completed'),
(3, 180.00, 'pending'),
(2, 130.00, 'processing');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng order_items
INSERT INTO order_items (order_id, product_id, quantity, price) VALUES
(1, 1, 1, 150.00),
(2, 2, 1, 180.00),
(3, 3, 1, 130.00);

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng discounts
INSERT INTO discounts (code, type, value, quantity, minimum_order, description, start_date, end_date) VALUES
('SUMMER10', 'percentage', 10, 100, 0, 'Gi·∫£m 10% cho m√πa h√®', '2024-06-01 00:00:00', '2024-06-30 23:59:59'),
('WINTER50', 'fixed', 50, 50, 200000, 'Gi·∫£m 50K cho ƒë∆°n t·ª´ 200K', '2024-12-01 00:00:00', '2024-12-31 23:59:59');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng posts
INSERT INTO posts (title, slug, content, excerpt, category_id, author_id, image, status, meta_title, meta_description) VALUES
('H∆∞·ªõng d·∫´n ch·ªçn gi√†y th·ªÉ thao', 'huong-dan-chon-giay-the-thao', 'N·ªôi dung h∆∞·ªõng d·∫´n ch·ªçn gi√†y...', 'T·ªïng h·ª£p c√°c ti√™u ch√≠ quan tr·ªçng khi ch·ªçn gi√†y th·ªÉ thao', 1, 2, 'huong_dan_chon_giay.jpg', 'published', 'C√°ch ch·ªçn gi√†y th·ªÉ thao ph√π h·ª£p', 'H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch ch·ªçn gi√†y th·ªÉ thao ph√π h·ª£p v·ªõi t·ª´ng m√¥n th·ªÉ thao'),
('C√°ch ph·ªëi ƒë·ªì v·ªõi gi√†y sneaker', 'cach-phoi-do-voi-giay-sneaker', 'N·ªôi dung c√°ch ph·ªëi ƒë·ªì...', 'Nh·ªØng g·ª£i √Ω ph·ªëi ƒë·ªì c√πng sneaker c·ª±c ch·∫•t', 3, 3, 'phoi_do_sneaker.jpg', 'published', 'Mix & Match v·ªõi Sneaker', 'H∆∞·ªõng d·∫´n ph·ªëi ƒë·ªì v·ªõi gi√†y sneaker cho nam v√† n·ªØ');

-- D·ªØ li·ªáu m·∫´u cho b·∫£ng comments
INSERT INTO comments (post_id, user_id, user_name, email, content, status) VALUES
(1, 2, 'John Doe', 'john@example.com', 'B√†i vi·∫øt r·∫•t h·ªØu √≠ch!', 'approved'),
(2, 3, 'Jane Smith', 'jane@example.com', 'M√¨nh th√≠ch phong c√°ch sneaker!', 'approved');
